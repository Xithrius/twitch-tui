[twitch]
# Your username from Twitch.
username = ""
# The streamer's username.
channel = ""
# The websocket server to connect to.
server = "wss://eventsub.wss.twitch.tv/ws"
# https://twitchtokengenerator.com/?scope=chat:read+chat:edit+channel:moderate+user:read:follows+user:read:emotes+user:read:chat+user:write:chat+moderator:manage:chat_messages+moderator:manage:banned_users+moderator:manage:chat_settings+moderator:manage:shoutouts+channel:manage:broadcast+channel:manage:moderators+channel:manage:vips+channel:manage:raids+channel:edit:commercial&auth=auth_stay
# chat:read, chat:edit, channel:moderate, user:read:follows, user:read:emotes, user:read:chat, user:write:chat, moderator:manage:chat_messages, moderator:manage:banned_users, moderator:manage:chat_settings, moderator:manage:shoutouts, channel:manage:broadcast, channel:manage:moderators, channel:manage:vips, channel:manage:raids, channel:edit:commercial
token = ""

[terminal]
# The delay in milliseconds between terminal updates.
delay = 30
# The maximum amount of messages that can be rendered.
maximum_messages = 500
# The file to put logs in.
log_file = ""
# From most verbose to least options here are debug, info, warn, and error.
log_level = "info"
# What state the application should start in.
# Options: dashboard, normal, and help.
first_state = "dashboard"

[storage]
# If previous channels switched to should be tracked.
# If enabled, the channel switcher search the user's previously switched to channels.
channels = false
# If previous username mentions should be tracked.
# If enabled, the chat input box will search previously mentioned users, given that
# the first character in the input box is `@`.
mentions = false

[filters]
# If filters should be enabled.
# Filters can be configured by placing a `filters.txt` file in the same directory
# as the config file.
# Each new filter is to be put on a new line.
# Regex can be used, where as keywords will also try to match anything in a message.
enabled = false
# If the regex filters should be reversed.
# This means that everything in the filters file will be accepted.
reversed = false

[frontend]
# The command and its args that should be used to view the stream (eg. mpv, streamlink)
view_command = []
# Whether to automatically start view_command when changing to a new stream
autostart_view_command = false
# If the time and date is to be shown in the chat window.
show_datetimes = true
# The format of string that will show up in the terminal.
# Specification of formatting datetime strings can be found here: https://strftime.org/
datetime_format = "%a %b %e %T %Y"
# If usernames should be shown in the chat window.
username_shown = true
# The color palette for usernames.
# Options: pastel, vibrant, warm, and cool.
palette = "pastel"
# Show the title values at the top of the terminal.
title_shown = true
# The amount of space between the chat window and the terminal border.
margin = 0
# Show twitch badges next to usernames.
badges = false
# Color theme, being either light or dark.
theme = "dark"
# If your username should be highlighted when it appears in chat.
username_highlight = true
# If there should be state tabs shown on the bottom of the terminal.
state_tabs = false
# The shape of the cursor in insert boxes.
# Options: user (current terminal cursor), line, underscore, and block.
cursor_shape = "block"
# If the cursor should be blinking.
blinking_cursor = false
# If mouse scrolling should be inverted.
inverted_scrolling = false
# If scroll offset integer should be shown.
show_scroll_offset = true
# If Twitch emotes should be displayed (requires kitty terminal).
twitch_emotes = false
# If BetterTTV emotes should be displayed (requires kitty terminal).
betterttv_emotes = false
# If 7TV emotes should be displayed (requires kitty terminal).
seventv_emotes = false
# If FrankerFaceZ emotes should be displayed (requires kitty terminal).
frankerfacez_emotes = false
# Channel names to always be displayed in the start screen (dashboard).
# Example: ["placeholder_channel", "another_channel"]
favorite_channels = []
# The amount of recently connected to channels shown on the start screen.
recent_channel_count = 5
# What style the border of the terminal should have.
# Options: plain, rounded, double, and thick.
border_type = "plain"
# If chat border should be hidden
hide_chat_border = false
# If the usernames should be aligned to the right.
# They will be shown to the left if this is disabled.
right_align_usernames = false
# Do not display the window size warning.
show_unsupported_screen_size = true
# The following widget will only contain channels that are currently live
only_get_live_followed_channels = false

[keybinds]
# Open the debug window
toggle_debug_focus = ["Ctrl+d"]

[keybinds.dashboard]
# Join the selected channel
join = ["Enter"]
# Open the recent channel search popup
recent_channels_search = ["s"]
# Open the followed channel search popup
followed_channels_search = ["f"]
# Have the keybinds popup window appear
help = ["?", "h"]
# Quit the application
quit = ["q"]
# Manually crash the application
crash_application = ["Ctrl+p"]

[keybinds.normal]
# Enter message (chat) mode for sending messages
enter_insert = ["i", "c"]
# Messaging mode with mention symbol
enter_insert_with_mention = ["@"]
# Messaging mode with command symbol
enter_insert_with_command = ["/"]
# Go to the dashboard screen (start screen)
enter_dashboard = ["S"]
# Search messages
search_messages = ["Ctrl+f"]
# Toggle the message filter
toggle_message_filter = ["Ctrl+t"]
# Reverse the message filter
reverse_message_filter = ["Ctrl+r"]
# Go back to the previous window
back_to_previous_window = ["Esc"]
# Scroll chat down
scroll_down = ["ScrollDown", "Down", "j"]
# Scroll chat up
scroll_up = ["ScrollUp", "Up", "k"]
# Scroll chat to top
scroll_to_end = ["G"]
# Scroll chat to bottom
scroll_to_start = ["g"]
# Open current stream in view_command, or browser if not set
open_in_player = ["o"]
# Open the recent channel search widget
recent_channels_search = ["s"]
# Open the followed channel search widget
followed_channels_search = ["f"]
# Have the keybinds popup window appear
help = ["?", "h"]
# Quit the application
quit = ["q"]
# Manually crash the application
crash_application = ["Ctrl+p"]

[keybinds.insert]
# Fill in suggestion, if available
fill_suggestion = ["Tab"]
# Confirm the input text to go through
confirm_text_input = ["Enter"]
# Go back to the previous window
back_to_previous_window = ["Esc"]
# Move cursor to the right
move_cursor_right = ["Right", "Ctrl+f"]
# Move cursor to the left
move_cursor_left = ["Left", "Ctrl+b"]
# Move cursor to the start
move_cursor_start = ["Home", "Ctrl+a"]
# Move cursor to the end
move_cursor_end = ["End", "Ctrl+e"]
# Swap previous item with current item
swap_previous_item_with_current = ["Ctrl+t"]
# Remove everything after the cursor
remove_after_cursor = ["Ctrl+k"]
# Remove everything before the cursor
remove_before_cursor = ["Ctrl+u"]
# Remove the previous word
remove_previous_word = ["Ctrl+w"]
# Remove item to the right
remove_item_to_right = ["Delete", "Ctrl+d"]
# Toggle the filter
toggle_message_filter = ["Ctrl+t"]
# Reverse the filter
reverse_message_filter = ["Ctrl+r"]
# Move to the end of the next word
end_of_next_word = ["Alt+f"]
# Move to the start of the previous word
start_of_previous_word = ["Alt+b"]
# Swap previous word with current word
swap_previous_word_with_current = ["Alt+t"]
# Toggle emote picker
toggle_emote_picker = ["Alt+e"]
# Quit the application
quit = ["Ctrl+q"]
# Manually crash the application
crash_application = ["Ctrl+p"]

[keybinds.selection]
# Move selection to next item
next_item = ["ScrollDown", "Down"]
# Move selection to previous item
prev_item = ["ScrollUp", "Up"]
# Delete the currently selected item
delete_item = ["Ctrl+d"]
# Confirm the currently selected item
select = ["Enter"]
# Go back to the previous window
back_to_previous_window = ["Esc"]
# Manually crash the application
crash_application = ["Ctrl+p"]
